<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - BulkyBookWeb</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/BulkyBookWeb.styles.css" asp-append-version="true" />

</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">Gift Pairings</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Category" asp-action="Index">Category</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="snow-container" id="snow"></div>
    <div class="container">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container">
            &copy; 2024 - BulkyBookWeb - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)

    <script>
        // Create snow particles
        const snowContainer = document.getElementById('snow');
        const particleCount = 50;

        for (let i = 0; i < particleCount; i++) {
          const particle = document.createElement('div');
          particle.className = 'snow';
          particle.style.left = Math.random() * 100 + 'vw';
          particle.style.animationDuration = (Math.random() * 3 + 2) + 's';
          particle.style.opacity = Math.random();
          particle.style.width = particle.style.height = Math.random() * 5 + 5 + 'px';
          snowContainer.appendChild(particle);
        }

        // Create presents
        const presentsContainer = document.getElementById('presents');
        const presentColors = ['#ff4444', '#ff6b6b', '#cc0000', '#990000', '#ff1a1a'];
        const ribbonColors = ['#ffdd44', '#ffee66', '#ffd700', '#daa520', '#f0e68c'];

        // Create presents spread across the top
        const presentCount = 0;
        const containerWidth = 290; // Container width + padding
        const spacing = containerWidth / presentCount;

        for (let i = 0; i < presentCount; i++) {
          const present = document.createElement('div');
          present.className = 'present-border';

          const bow = document.createElement('div');
          bow.className = 'bow';
          present.appendChild(bow);

          // Randomize position slightly around evenly spaced points
          const baseX = i * spacing;
          const x = baseX + (Math.random() - 0.5) * 15;
          const y = (Math.random() * 5) - 10;

          const size = 25 + Math.random() * 15;
          const rotation = (Math.random() - 0.5) * 300;

          const presentColor = presentColors[Math.floor(Math.random() * presentColors.length)];
          const ribbonColor = ribbonColors[Math.floor(Math.random() * ribbonColors.length)];

          present.style.cssText = `
            left: ${x}px;
            top: ${y}px;
            width: ${size}px;
            height: ${size}px;
            rotation: ${rotation}deg;
            background: ${presentColor};
          `;

          present.style.setProperty('--ribbon-color', ribbonColor);
          bow.style.background = ribbonColor;

          presentsContainer.appendChild(present);
        }
    </script>
</body>
</html>
